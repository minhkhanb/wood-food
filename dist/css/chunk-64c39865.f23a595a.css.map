{"version":3,"sources":["webpack:///src/components/C:/Working/Best Practices/wood-food/src/components/JobsList.vue","webpack:///src/views/jobs/C:/Working/Best Practices/wood-food/src/views/jobs/Jobs.vue"],"names":[],"mappings":"AAoDA,2BACE,eAAgB,CAChB,gBACF,CAEA,8BACE,SACF,CAEA,8BACE,oBAAqB,CACrB,eAAiB,CACjB,YAAa,CACb,aAAc,CACd,iBACF,CAEA,8BACE,eAAgB,CAChB,yBACF,CAEA,yBACE,YACF,CAEA,6BACE,UACF,CAEA,2BACE,aAAc,CACd,eAAiB,CACjB,eACF,CAEA,4BACE,kBACF,CCiCA,MACE,iBACF,CAEA,QACE,eAAgB,CAChB,YAAa,CACb,kBAAmB,CACnB,gBAAiB,CACjB,eAAgB,CAChB,cAAe,CACf,UACF,CAEA,cACE,eACF,CAEA,OACE,oBACF","file":"chunk-64c39865.f23a595a.css","sourcesContent":["<template>\n  <div class=\"job-list\">\n    <p>Ordered by {{ order }}</p>\n    <transition-group name=\"list\" tag=\"ul\">\n      <li v-for=\"job in orderedJobs\" :key=\"job.id\">\n        <h2>{{ job.title }} in {{ job.location }}</h2>\n        <div class=\"salary\">\n          <p>{{ job.salary }} rupees</p>\n        </div>\n        <div class=\"description\">\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n            eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim\n            ad minim veniam\n          </p>\n        </div>\n      </li>\n    </transition-group>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Job } from '@/types/Job';\nimport { OrderTerm } from '@/types/OrderTerm';\nimport { computed, defineComponent, PropType } from 'vue';\n\nexport default defineComponent({\n  props: {\n    jobs: {\n      required: true,\n      type: Array as PropType<Job[]>,\n    },\n    order: {\n      required: true,\n      type: String as PropType<OrderTerm>,\n    },\n  },\n  setup(props) {\n    const orderedJobs = computed(() => {\n      return [...props.jobs].sort((a: Job, b: Job) => {\n        return a[props.order] > b[props.order] ? 1 : -1;\n      });\n    });\n\n    return {\n      orderedJobs,\n    };\n  },\n});\n</script>\n\n<style scoped>\n.job-list {\n  max-width: 960px;\n  margin: 40px auto;\n}\n\n.job-list ul {\n  padding: 0;\n}\n\n.job-list li {\n  list-style-type: none;\n  background: white;\n  padding: 16px;\n  margin: 16px 0;\n  border-radius: 4px;\n}\n\n.job-list h2 {\n  margin: 0 0 10px;\n  text-transform: capitalize;\n}\n\n.salary {\n  display: flex;\n}\n\n.salary img {\n  width: 30px;\n}\n\n.salary p {\n  color: #17bf66;\n  font-weight: bold;\n  margin: 10px 4px;\n}\n\n.list-move {\n  transition: all 0.5s;\n}\n</style>\n","<template>\n  <div id=\"tuts\">\n    <div v-for=\"job in jobs\" :key=\"job.id\" class=\"job\">\n      <router-link :to=\"{ name: 'JobDetails', params: { id: job.id } }\">\n        <h2>{{ job.title }}</h2>\n      </router-link>\n    </div>\n\n    <div class=\"positions\" v-if=\"positions.length\">\n      <h2>Position</h2>\n      <div class=\"pos\" v-for=\"pos in positions\" :key=\"pos.id\">\n        <p>{{ pos.title }}</p>\n      </div>\n    </div>\n    <div v-else>\n      <p>Loading positions...</p>\n    </div>\n\n    <div class=\"job-app\">\n      <header>\n        <h1>\n          <img src=\"../../assets/logo.png\" alt=\"\" />\n        </h1>\n        <div class=\"order\">\n          <button @click=\"handleClick('title')\">order by title</button>\n          <button @click=\"handleClick('salary')\">order by salary</button>\n          <button @click=\"handleClick('location')\">order by location</button>\n        </div>\n      </header>\n      <JobList :jobs=\"jobs\" :order=\"order\" />\n    </div>\n    <!-- <nav class=\"navbar navbar-expand navbar-dark bg-dark\">\n      <router-link to=\"/\" class=\"navbar-brand\">bezKoder</router-link>\n      <div class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item\">\n          <router-link to=\"/tutorials\" class=\"nav-link\">Tutorials</router-link>\n        </li>\n        <li class=\"nav-item\">\n          <router-link to=\"/add\" class=\"nav-link\">Add</router-link>\n        </li>\n      </div>\n    </nav> -->\n\n    <div class=\"container mt-3\">\n      <router-view />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref } from 'vue';\nimport JobList from '@/components/JobsList.vue';\nimport { Job } from '@/types/Job';\nimport { OrderTerm } from '@/types/OrderTerm';\n\nexport default defineComponent({\n  name: 'Jobs',\n  components: {\n    JobList,\n  },\n  data() {\n    const positions: Job[] = [];\n\n    return {\n      positions,\n    };\n  },\n  setup() {\n    const jobs = ref<Job[]>([\n      {\n        title: 'farm worker',\n        location: 'lon lon ranch',\n        salary: 1000,\n        id: '1',\n      },\n      {\n        title: 'quarryman',\n        location: 'death mountain',\n        salary: 40000,\n        id: '2',\n      },\n      {\n        title: 'flute player',\n        location: 'the lost woods',\n        salary: 35000,\n        id: '3',\n      },\n      {\n        title: 'fisherman',\n        location: 'lake hylia',\n        salary: 21000,\n        id: '4',\n      },\n      {\n        title: 'prison guard',\n        location: 'gerudo valley',\n        salary: 32000,\n        id: '5',\n      },\n    ]);\n\n    const order = ref<OrderTerm>('title');\n\n    const handleClick = (term: OrderTerm) => {\n      order.value = term;\n    };\n\n    return {\n      jobs,\n      handleClick,\n      order,\n    };\n  },\n  mounted() {\n    fetch('http://localhost:3000/jobs')\n      .then((res) => res.json())\n      .then((data) => (this.positions = data))\n      .catch((err) => console.log(err.message));\n  },\n});\n</script>\n\n<style>\n#tuts {\n  text-align: center;\n}\n\n.job h2 {\n  background: #ddd;\n  padding: 20px;\n  border-radius: 10px;\n  margin: 10px auto;\n  max-width: 600px;\n  cursor: pointer;\n  color: #444;\n}\n\n.job h2:hover {\n  background: #ccc;\n}\n\n.job a {\n  text-decoration: none;\n}\n</style>\n"]}